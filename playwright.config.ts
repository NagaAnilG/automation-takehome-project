import { defineConfig, devices } from '@playwright/test';

/**
 * Read environment variables from file.
 * https://github.com/motdotla/dotenv
 * 
 */
 require('dotenv').config();

const timeInMin: number = 10 * 1000;
export default defineConfig({
  /* Test directory */
  testDir: './scenarios',
  /* Fail the build on CI if you accidentally left test.only in the source code. */
  forbidOnly: !!process.env.CI,
  // Run all tests in parallel.
  fullyParallel: true,
  /* Retry on CI only */
  retries: Number.parseInt(process.env.RETRIES!, 10),
  /* Reporter to use. See https://playwright.dev/docs/test-reporters */
  reporter: 'html',
  /* Timeout for each test in milliseconds */
  timeout: Number.parseInt(process.env.TEST_TIMEOUT!, 10) * timeInMin,
  /* When tests run in parallel, configure the no of Workers */
  workers: Number.parseInt(process.env.PARALLEL_THREAD!, 10),
  /*Missing snapshots are created, for example when authoring a new test and running it for the first time*/
  updateSnapshots: 'missing',
  /** template controlling location of snapshots generated by expect(page).toHaveScreenshot() and expect(value).toMatchSnapshot(). */
  snapshotPathTemplate: '__screenshots__/{projectName}/{testFilePath}/{arg}{ext}',
  /* Shared settings for all the projects below. See https://playwright.dev/docs/api/class-testoptions. */
  use: {
    /* Base URL to use in actions like `await page.goto('/')`. */
    baseURL: process.env.BASE_URL,
    /* Collect trace when retrying the failed test. See https://playwright.dev/docs/trace-viewer */
    trace: 'on-first-retry',
    /**Whether to run browser in headless mode. Defaults to true */
    headless: false,
    /* Maximum time each action such as `click()` can take. Defaults to 0 (no limit). */
    actionTimeout: Number.parseInt(process.env.ACTION_TIMEOUT!, 10) * timeInMin,
    /* Maximum time each Page Navigation */
    navigationTimeout: Number.parseInt(process.env.NAVIGATION_TIMEOUT!, 10) * timeInMin,
    /**Record video only when retrying a test for the first time */
    video: 'retain-on-failure',
    screenshot: { 
      mode: "only-on-failure",
      fullPage: true,
    },
  },

  /* Configure projects for major browsers */
  projects: [
    {
      name: 'chromium',
      use: { ...devices['Desktop Chrome'] }
    }
  ],
});
